name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Build release distributions
        run: |
          python -m pip install --upgrade pip --trusted-host pypi.org --trusted-host files.pythonhosted.org
          python -m pip install build --trusted-host pypi.org --trusted-host files.pythonhosted.org
          python -m build

      - name: Upload distributions (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs: [release-build]
    permissions:
      id-token: write  # required for OIDC trusted publishing
      contents: read
    environment:
      name: pypi
      # Optionally show the deployment target on the run page:
      # url: https://pypi.org/project/duckplus/${{ github.event.release.tag_name }}

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Verify release tag == pyproject version
        env:
          RELEASE_TAG: ${{ github.event.release.tag_name }}
        run: |
          python - <<'PY'
          import os, sys, tomllib
          with open("pyproject.toml","rb") as f:
              data = tomllib.load(f)
          ver = data["project"]["version"]
          tag = os.environ["RELEASE_TAG"].lstrip("v")
          if tag != ver:
              print(f"Error: release tag ({tag}) != pyproject.version ({ver})")
              sys.exit(1)
          print(f"OK: release tag ({tag}) matches pyproject.version ({ver})")
          PY

      - name: Publish to PyPI (OIDC trusted publisher)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
